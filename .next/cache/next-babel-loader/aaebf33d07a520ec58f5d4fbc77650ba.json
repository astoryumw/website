{"ast":null,"code":"var _jsxFileName = \"/Users/Austin/website/pages/index.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      secondsElapsed: 0\n    };\n    this.handleStartClick = this.handleStartClick.bind(this);\n  }\n\n  getMilliseconds() {\n    return null;\n  }\n\n  getSeconds() {\n    return ('0' + this.state.secondsElapsed % 60).slice(-2);\n  } // this isn't resetting at 0 after an hour, another '0' and slice?\n\n\n  getMinutes() {\n    return Math.floor(this.state.secondsElapsed / 60);\n  }\n\n  getHours() {\n    return Math.floor(this.state.secondsElapsed / 60 / 60);\n  }\n\n  handleStartClick() {\n    this.timer = setInterval(() => {\n      this.setState({\n        secondsElapsed: this.state.secondsElapsed + 1\n      });\n    }, 1000);\n  }\n\n  handleStopClick() {\n    clearInterval(timer);\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 4\n      }\n    }, __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 5\n      }\n    }, this.getHours(), \":\", this.getMinutes(), \":\", this.getSeconds()), __jsx(\"button\", {\n      type: \"button\",\n      onClick: this.handleStartClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 5\n      }\n    }, \" start \"), __jsx(\"button\", {\n      type: \"button\",\n      onClick: this.handleStopClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 5\n      }\n    }, \" stop \"));\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["/Users/Austin/website/pages/index.js"],"names":["React","Home","Component","constructor","props","state","secondsElapsed","handleStartClick","bind","getMilliseconds","getSeconds","slice","getMinutes","Math","floor","getHours","timer","setInterval","setState","handleStopClick","clearInterval","render"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,IAAN,SAAmBD,KAAK,CAACE,SAAzB,CAAmC;AAClCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAACC,MAAAA,cAAc,EAAE;AAAjB,KAAb;AACA,SAAKC,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBC,IAAtB,CAA2B,IAA3B,CAAxB;AAEA;;AAEDC,EAAAA,eAAe,GAAG;AACjB,WAAO,IAAP;AACA;;AAEDC,EAAAA,UAAU,GAAG;AACZ,WAAO,CAAC,MAAM,KAAKL,KAAL,CAAWC,cAAX,GAA4B,EAAnC,EAAuCK,KAAvC,CAA6C,CAAC,CAA9C,CAAP;AACA,GAdiC,CAgBlC;;;AACAC,EAAAA,UAAU,GAAG;AACZ,WAAOC,IAAI,CAACC,KAAL,CAAW,KAAKT,KAAL,CAAWC,cAAX,GAA4B,EAAvC,CAAP;AACA;;AAEDS,EAAAA,QAAQ,GAAG;AACV,WAAOF,IAAI,CAACC,KAAL,CAAY,KAAKT,KAAL,CAAWC,cAAX,GAA4B,EAA7B,GAAmC,EAA9C,CAAP;AACA;;AAGDC,EAAAA,gBAAgB,GAAG;AAClB,SAAKS,KAAL,GAAaC,WAAW,CAAC,MAAM;AAC9B,WAAKC,QAAL,CAAc;AACbZ,QAAAA,cAAc,EAAG,KAAKD,KAAL,CAAWC,cAAX,GAA4B;AADhC,OAAd;AAGA,KAJuB,EAIrB,IAJqB,CAAxB;AAKA;;AAEDa,EAAAA,eAAe,GAAG;AACjBC,IAAAA,aAAa,CAACJ,KAAD,CAAb;AACA;;AAEDK,EAAAA,MAAM,GAAG;AACR,WACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKN,QAAL,EAAL,OAAuB,KAAKH,UAAL,EAAvB,OAA2C,KAAKF,UAAL,EAA3C,CADD,EAEC;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAE,KAAKH,gBAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFD,EAGC;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAE,KAAKY,eAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHD,CADD;AAOA;;AA9CiC;;AAkDnC,eAAelB,IAAf","sourcesContent":["import React from 'react';\n\nclass Home extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {secondsElapsed: 0};\n\t\tthis.handleStartClick = this.handleStartClick.bind(this);\n\t\t\n\t}\n\n\tgetMilliseconds() {\n\t\treturn null;\n\t}\n\n\tgetSeconds() {\n\t\treturn ('0' + this.state.secondsElapsed % 60).slice(-2);\n\t}\n\n\t// this isn't resetting at 0 after an hour, another '0' and slice?\n\tgetMinutes() {\n\t\treturn Math.floor(this.state.secondsElapsed / 60);\n\t}\n\n\tgetHours() {\n\t\treturn Math.floor((this.state.secondsElapsed / 60) / 60);\n\t}\n\n\n\thandleStartClick() {\n\t\tthis.timer = setInterval(() => {\n\t\t\tthis.setState({\n\t\t\t\tsecondsElapsed: (this.state.secondsElapsed + 1)\n\t\t\t});\n\t\t}, 1000)\n\t}\n\n\thandleStopClick() {\n\t\tclearInterval(timer);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<h1>{this.getHours()}:{this.getMinutes()}:{this.getSeconds()}</h1>\n\t\t\t\t<button type=\"button\" onClick={this.handleStartClick}> start </button>\n\t\t\t\t<button type=\"button\" onClick={this.handleStopClick}> stop </button>\n\t\t\t</div>\n\t\t);\n\t}\n\n}\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}