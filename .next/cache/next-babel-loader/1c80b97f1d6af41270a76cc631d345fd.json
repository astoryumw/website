{"ast":null,"code":"var _jsxFileName = \"/Users/Austin/website/pages/index.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useReducer, useRef } from 'react';\nimport ref from '../components/ref.js';\n\nclass Home extends React.Component {\n  // \n  constructor(props) {\n    super(props); // create milliSeconds\n\n    this.state = {\n      milliSecondsElapsed: 0\n    }; // this.handleChange = this.handleChange.bind(this);\n    // this.myRef = React.createRef();\n    // this.focusRef = this.focusRef.bind(this);\n  }\n\n  update(e) {\n    this.setState({\n      milliSecondsElapsed: this.a.value\n    });\n  } // update setState({milliSecondsElapsd: 0})\n  // focusRef() {\n  // \tthis.myRef.current.focus();\n  // }\n  // handleChange(e) {\n  // \tthis.setState({milliSecondsElapsed: e.target.milliSecondsElapsed});\n  // } \n  // handleSubmit = e => {\n  // \te.preventDefault();\n  // }\n  // getMilliseconds() {\n  // \treturn (\"0\" + this.state.milliSecondsElapsed).slice(-2);\n  // }\n  // // var number = this.state.milliSecondsElapsed.toString().length;\n  // getSeconds() {\n  // \tvar milli = this.state.milliSecondsElapsed;\n  // \tvar seconds = 0;\n  // \tseconds = milli / 100;\n  // \tvar myTrunc = Math.trunc(seconds);\n  // \tmyTrunc = myTrunc % 60;\n  // \treturn (\"0\" + myTrunc).slice(-2);\n  // }\n  // getMinutes() {\n  // \tvar milli = this.state.milliSecondsElapsed;\n  // \tvar seconds = 0;\n  // \tvar minutes = 0;\n  // \tseconds = milli / 100;\n  // \tminutes = seconds / 60;\n  // \tvar myTrunc = Math.trunc(minutes);\n  // \treturn (\"0\" + myTrunc).slice(-2);\n  // }\n  // <input value={this.state.milliSecondsElapsed} ref={this.myRef} onChange={this.handleChange} />\n\n\n  render() {\n    return __jsx(\"div\", {\n      className: \"index\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 4\n      }\n    }, __jsx(\"input\", {\n      type: \"text\",\n      ref: call_back => {\n        this.a = call_back;\n      },\n      onChange: this.update.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 5\n      }\n    }));\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["/Users/Austin/website/pages/index.js"],"names":["React","useEffect","useReducer","useRef","ref","Home","Component","constructor","props","state","milliSecondsElapsed","update","e","setState","a","value","render","call_back","bind"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,UAA1B,EAAsCC,MAAtC,QAAmD,OAAnD;AACA,OAAOC,GAAP,MAAgB,sBAAhB;;AAEA,MAAMC,IAAN,SAAmBL,KAAK,CAACM,SAAzB,CAAmC;AAElC;AAEAC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN,EADkB,CAGlB;;AACA,SAAKC,KAAL,GAAa;AAACC,MAAAA,mBAAmB,EAAE;AAAtB,KAAb,CAJkB,CAKlB;AACA;AACA;AAEA;;AAEDC,EAAAA,MAAM,CAACC,CAAD,EAAI;AACT,SAAKC,QAAL,CAAc;AAACH,MAAAA,mBAAmB,EAAE,KAAKI,CAAL,CAAOC;AAA7B,KAAd;AACA,GAjBiC,CAmBlC;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAGA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;;;AACAC,EAAAA,MAAM,GAAG;AACR,WAGC;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,GAAG,EAAGC,SAAD,IAAe;AAAC,aAAKH,CAAL,GAASG,SAAT;AAAmB,OAA3D;AAA6D,MAAA,QAAQ,EAAI,KAAKN,MAAL,CAAYO,IAAZ,CAAiB,IAAjB,CAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CAHD;AAQA;;AA7EiC;;AAiFnC,eAAeb,IAAf","sourcesContent":["import React, {useEffect, useReducer, useRef} from 'react';\nimport ref from '../components/ref.js';\n\nclass Home extends React.Component {\n\n\t// \n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\t// create milliSeconds\n\t\tthis.state = {milliSecondsElapsed: 0};\n\t\t// this.handleChange = this.handleChange.bind(this);\n\t\t// this.myRef = React.createRef();\n\t\t// this.focusRef = this.focusRef.bind(this);\n\n\t}\n\n\tupdate(e) {\n\t\tthis.setState({milliSecondsElapsed: this.a.value })\n\t}\n\n\t// update setState({milliSecondsElapsd: 0})\n\n\t// focusRef() {\n\t// \tthis.myRef.current.focus();\n\t// }\n\n\t// handleChange(e) {\n\t// \tthis.setState({milliSecondsElapsed: e.target.milliSecondsElapsed});\n\t// } \n\n\t// handleSubmit = e => {\n\t// \te.preventDefault();\n\n\n\t// }\n\n\t// getMilliseconds() {\n\t// \treturn (\"0\" + this.state.milliSecondsElapsed).slice(-2);\n\t// }\n\n\n\t// // var number = this.state.milliSecondsElapsed.toString().length;\n\t// getSeconds() {\n\t// \tvar milli = this.state.milliSecondsElapsed;\n\t// \tvar seconds = 0;\n\t// \tseconds = milli / 100;\n\n\t// \tvar myTrunc = Math.trunc(seconds);\n\n\t// \tmyTrunc = myTrunc % 60;\n\n\t// \treturn (\"0\" + myTrunc).slice(-2);\n\t// }\n\n\n\t// getMinutes() {\n\t// \tvar milli = this.state.milliSecondsElapsed;\n\t// \tvar seconds = 0;\n\t// \tvar minutes = 0;\n\t// \tseconds = milli / 100;\n\t// \tminutes = seconds / 60;\n\n\t// \tvar myTrunc = Math.trunc(minutes);\n\n\t// \treturn (\"0\" + myTrunc).slice(-2);\n\t\t\n\t// }\n\n\t// <input value={this.state.milliSecondsElapsed} ref={this.myRef} onChange={this.handleChange} />\n\trender() {\n\t\treturn (\n\n\t\t\t\n\t\t\t<div className=\"index\">\n\t\t\t\t<input type=\"text\" ref={(call_back) => {this.a = call_back}} onChange = {this.update.bind(this)} />\n\t\t\t</div>\n\n\t\t);\n\t}\n\n}\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}