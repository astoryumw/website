{"ast":null,"code":"var _jsxFileName = \"/Users/Austin/NewWebsite/website/pages/save.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport { myArray, milliSecondsElapsed, low, high } from './index.js';\nexport default class Example extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"handleAdd\", () => {\n      this.setState(previousState => ({\n        myArray: [this.state.time, ...previousState.myArray]\n      })); // setTimes method here\n      // let obj = this.state.time + \",\" + this.state.myArray;\n      // localStorage.setItem('myTimes', JSON.stringify(obj));\n    });\n\n    _defineProperty(this, \"loadMe\", () => {\n      if (!this.state.loading) {\n        this.getTimes();\n        this.setState({\n          loading: true\n        });\n      }\n    });\n\n    this.setTimes = this.setTimes.bind(this);\n    this.getTimes = this.getTimes.bind(this);\n  }\n\n  handleUpdate(evt) {\n    this.setState({\n      time: evt.target.value\n    });\n  }\n\n  setTimes() {\n    let obj = this.state.myArray;\n    localStorage.setItem('myTimes', JSON.stringify(obj)); // console.log(obj);\n\n    let obj1 = this.state.low;\n    localStorage.setItem('lowTime', JSON.stringify(obj1));\n    let obj2 = this.state.high;\n    localStorage.setItem('highTime', JSON.stringify(obj2)); // console.log(obj2);\n\n    let obj3 = this.state.total;\n    localStorage.setItem('totalTime', JSON.stringify(obj3)); // add obj for last time, then add that to the array\n\n    let obj4 = this.state.milliSecondsElapsed / 100;\n    localStorage.setItem('lastTime', JSON.stringify(obj4));\n  } // i think myArray is not working after i load because of something in getTimes()\n\n\n  getTimes() {\n    let data = localStorage.getItem('myTimes');\n    data = JSON.parse(data);\n    this.setState({\n      myArray: data\n    });\n    let data1 = localStorage.getItem('lowTime');\n    data1 = JSON.parse(data1);\n    this.setState({\n      low: data1\n    });\n    let data2 = localStorage.getItem('highTime');\n    data2 = JSON.parse(data2);\n    this.setState({\n      high: data2\n    });\n    let data3 = localStorage.getItem('totalTime');\n    data3 = JSON.parse(data3);\n    this.setState({\n      total: data3\n    });\n    let data4 = localStorage.getItem('lastTime');\n    data4 = JSON.parse(data4);\n    this.setState({\n      last: data4\n    });\n    this.setState({\n      otherLoading: true\n    });\n  }\n\n  // maybe add if else? \n  // if this.getTimes is nothing then start at empty array?\n  // <button onClick={ () => this.setTimes() }>Save Times</button>\n  render() {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 4\n      }\n    }, __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 5\n      }\n    }, \"Add a number to the list by clicking the button\"), this.state.myArray.length ? __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 6\n      }\n    }, this.state.myArray.join(\", \")) : __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 6\n      }\n    }), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 5\n      }\n    }, __jsx(\"input\", {\n      type: \"text\",\n      value: this.state.time,\n      onChange: this.handleUpdate.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 8\n      }\n    })), __jsx(\"button\", {\n      className: \"button-style\",\n      onClick: this.handleAdd.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 5\n      }\n    }, \"Add\"), __jsx(\"button\", {\n      onClick: () => this.getTimes(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 5\n      }\n    }, \"Load Times\"), __jsx(\"button\", {\n      onClick: () => this.setTimes(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 5\n      }\n    }, \"Save Times\"));\n  }\n\n}","map":{"version":3,"sources":["/Users/Austin/NewWebsite/website/pages/save.js"],"names":["React","myArray","milliSecondsElapsed","low","high","Example","Component","constructor","props","setState","previousState","state","time","loading","getTimes","setTimes","bind","handleUpdate","evt","target","value","obj","localStorage","setItem","JSON","stringify","obj1","obj2","obj3","total","obj4","data","getItem","parse","data1","data2","data3","data4","last","otherLoading","render","length","join","handleAdd"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { myArray,milliSecondsElapsed,low,high} from './index.js';\n\nexport default class Example extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.setTimes = this.setTimes.bind(this);\n\t\tthis.getTimes = this.getTimes.bind(this);\n\t}\n\n\thandleUpdate(evt) {\n    \tthis.setState({ time: evt.target.value });\n  \t}\n\n  \thandleAdd = () => {\n  \t\tthis.setState(\n  \t\t\t(previousState) => ({\n\t\t\t\tmyArray: [\n\t\t      \t\tthis.state.time,\n\t\t      \t\t...previousState.myArray\n\t\t    \t],\n  \t\t\t}),\n  \t\t)\n  \t\t// setTimes method here\n  \t\t// let obj = this.state.time + \",\" + this.state.myArray;\n    \t// localStorage.setItem('myTimes', JSON.stringify(obj));\n  \t}\n\n  setTimes() {\n    let obj = this.state.myArray;\n    localStorage.setItem('myTimes', JSON.stringify(obj));\n    // console.log(obj);\n    let obj1 = this.state.low;\n    localStorage.setItem('lowTime', JSON.stringify(obj1));\n\n    let obj2 = this.state.high;\n    localStorage.setItem('highTime', JSON.stringify(obj2));\n    // console.log(obj2);\n    let obj3 = this.state.total;\n    localStorage.setItem('totalTime', JSON.stringify(obj3));\n\n    // add obj for last time, then add that to the array\n    let obj4 = this.state.milliSecondsElapsed/100;\n    localStorage.setItem('lastTime', JSON.stringify(obj4));\n  }\n\n  \t// i think myArray is not working after i load because of something in getTimes()\n  getTimes() {\n    let data = localStorage.getItem('myTimes');\n    data = JSON.parse(data);\n    this.setState({ myArray: data });\n\n    let data1 = localStorage.getItem('lowTime');\n    data1 = JSON.parse(data1);\n    this.setState({ low: data1 });\n\n    let data2 = localStorage.getItem('highTime');\n    data2 = JSON.parse(data2);\n    this.setState({ high: data2 });\n\n    let data3 = localStorage.getItem('totalTime');\n    data3 = JSON.parse(data3);\n    this.setState({ total: data3 });\n\n    let data4 = localStorage.getItem('lastTime');\n    data4 = JSON.parse(data4);\n    this.setState({ last: data4 });\n\n    this.setState({ otherLoading: true });\n\n  }\n\n  loadMe = () => {\n    if (!this.state.loading) {\n      this.getTimes();\n      this.setState({ loading: true });\n    }\n  }\n\n  \t// maybe add if else? \n  \t// if this.getTimes is nothing then start at empty array?\n  \t// <button onClick={ () => this.setTimes() }>Save Times</button>\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<p>Add a number to the list by clicking the button</p>\n\t\t\t\t{this.state.myArray.length ? (\n\t\t\t\t\t<p>{this.state.myArray.join(\", \")}</p>\n\t\t\t\t) : (\n\t\t\t\t\t<p></p>\n\t\t\t\t)}\n\t\t\t\n\t\t\t\t\n\t\t\t\t<p><input type='text' value={this.state.time} onChange={this.handleUpdate.bind(this)} /></p>\n\t\t\t\t<button className=\"button-style\" onClick={this.handleAdd.bind(this)}>Add</button>\n\t\t\t\t\n\t\t\t\t<button onClick={ () => this.getTimes() }>Load Times</button>\n\t\t\t\t<button onClick={ () => this.setTimes() }>Save Times</button>\n\n\t\t\t</div>\n\t\t)\n\t}\n}"]},"metadata":{},"sourceType":"module"}