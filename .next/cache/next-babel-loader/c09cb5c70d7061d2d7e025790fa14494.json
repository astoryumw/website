{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\n// App.js (client)\nimport React from 'react';\nimport { addTime } from \"./util\";\n\nfunction App() {\n  var _React$useState = React.useState(\"\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      name = _React$useState2[0],\n      setName = _React$useState2[1];\n\n  var _React$useState3 = React.useState(\"\"),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      time = _React$useState4[0],\n      setTime = _React$useState4[1];\n\n  var rx_live = /^[+-]?\\d*(?:[.,]\\d*)?$/;\n\n  function handleUpdate(evt) {\n    setName(evt.target.value);\n  }\n\n  function handleUpdateTime(evt) {\n    if (rx_live.test(evt.target.value)) {\n      setTime(evt.target.value);\n    } else {\n      alert(\"Please enter a number here.\");\n    }\n  }\n\n  function handleAddTime(_x) {\n    return _handleAddTime.apply(this, arguments);\n  }\n\n  function _handleAddTime() {\n    _handleAddTime = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(evt) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return addTime(name, time);\n\n            case 2:\n              alert(\"Added!\");\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _handleAddTime.apply(this, arguments);\n  }\n\n  return __jsx(\"div\", null, __jsx(\"h4\", {\n    className: \"text\"\n  }, \"Enter your name followed by your time to add your time!\"), __jsx(\"p\", null, __jsx(\"input\", {\n    type: \"text\",\n    value: name,\n    onChange: handleUpdate\n  })), __jsx(\"p\", null, __jsx(\"input\", {\n    type: \"text\",\n    value: time,\n    onChange: handleUpdateTime\n  })), __jsx(\"button\", {\n    className: \"button-style\",\n    onClick: handleAddTime\n  }, \"Add Time\"));\n}\n\nexport default App;","map":null,"metadata":{},"sourceType":"module"}