{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/Users/Austin/website/pages/index.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { useEffect, useReducer, useRef } from 'react';\nimport ref from '../components/ref.js';\n\nvar Home = /*#__PURE__*/function (_React$Component) {\n  _inherits(Home, _React$Component);\n\n  var _super = _createSuper(Home);\n\n  // \n  function Home(props) {\n    var _this;\n\n    _classCallCheck(this, Home);\n\n    _this = _super.call(this, props); // create milliSeconds\n\n    _this.state = {\n      milliSecondsElapsed: 0\n    }; // this.handleChange = this.handleChange.bind(this);\n    // this.myRef = React.createRef();\n    // this.focusRef = this.focusRef.bind(this);\n\n    return _this;\n  }\n\n  _createClass(Home, [{\n    key: \"update\",\n    value: function update(e) {\n      this.setState({\n        milliSecondsElapsed: this.refs.anything.value\n      });\n    } // update setState({milliSecondsElapsd: 0})\n    // focusRef() {\n    // \tthis.myRef.current.focus();\n    // }\n    // handleChange(e) {\n    // \tthis.setState({milliSecondsElapsed: e.target.milliSecondsElapsed});\n    // } \n    // handleSubmit = e => {\n    // \te.preventDefault();\n    // }\n    // getMilliseconds() {\n    // \treturn (\"0\" + this.state.milliSecondsElapsed).slice(-2);\n    // }\n    // // var number = this.state.milliSecondsElapsed.toString().length;\n    // getSeconds() {\n    // \tvar milli = this.state.milliSecondsElapsed;\n    // \tvar seconds = 0;\n    // \tseconds = milli / 100;\n    // \tvar myTrunc = Math.trunc(seconds);\n    // \tmyTrunc = myTrunc % 60;\n    // \treturn (\"0\" + myTrunc).slice(-2);\n    // }\n    // getMinutes() {\n    // \tvar milli = this.state.milliSecondsElapsed;\n    // \tvar seconds = 0;\n    // \tvar minutes = 0;\n    // \tseconds = milli / 100;\n    // \tminutes = seconds / 60;\n    // \tvar myTrunc = Math.trunc(minutes);\n    // \treturn (\"0\" + myTrunc).slice(-2);\n    // }\n    // <input value={this.state.milliSecondsElapsed} ref={this.myRef} onChange={this.handleChange} />\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", {\n        className: \"index\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 4\n        }\n      }, __jsx(\"input\", {\n        type: \"text\",\n        ref: \"anything\",\n        onChange: this.update.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 5\n        }\n      }), __jsx(\"em\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 5\n        }\n      }, this.state.milliSecondsElapsed));\n    }\n  }]);\n\n  return Home;\n}(React.Component);\n\nexport default Home;","map":{"version":3,"sources":["/Users/Austin/website/pages/index.js"],"names":["React","useEffect","useReducer","useRef","ref","Home","props","state","milliSecondsElapsed","e","setState","refs","anything","value","update","bind","Component"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,UAA1B,EAAsCC,MAAtC,QAAmD,OAAnD;AACA,OAAOC,GAAP,MAAgB,sBAAhB;;IAEMC,I;;;;;AAEL;AAEA,gBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AAClB,8BAAMA,KAAN,EADkB,CAGlB;;AACA,UAAKC,KAAL,GAAa;AAACC,MAAAA,mBAAmB,EAAE;AAAtB,KAAb,CAJkB,CAKlB;AACA;AACA;;AAPkB;AASlB;;;;2BAEMC,C,EAAG;AACT,WAAKC,QAAL,CAAc;AAACF,QAAAA,mBAAmB,EAAE,KAAKG,IAAL,CAAUC,QAAV,CAAmBC;AAAzC,OAAd;AACA,K,CAED;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAGA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;;;;6BACS;AACR,aAGC;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,GAAG,EAAC,UAAvB;AAAkC,QAAA,QAAQ,EAAI,KAAKC,MAAL,CAAYC,IAAZ,CAAiB,IAAjB,CAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,EAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK,KAAKR,KAAL,CAAWC,mBAAhB,CAFD,CAHD;AASA;;;;EA9EiBR,KAAK,CAACgB,S;;AAkFzB,eAAeX,IAAf","sourcesContent":["import React, {useEffect, useReducer, useRef} from 'react';\nimport ref from '../components/ref.js';\n\nclass Home extends React.Component {\n\n\t// \n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\t// create milliSeconds\n\t\tthis.state = {milliSecondsElapsed: 0};\n\t\t// this.handleChange = this.handleChange.bind(this);\n\t\t// this.myRef = React.createRef();\n\t\t// this.focusRef = this.focusRef.bind(this);\n\n\t}\n\n\tupdate(e) {\n\t\tthis.setState({milliSecondsElapsed: this.refs.anything.value })\n\t}\n\n\t// update setState({milliSecondsElapsd: 0})\n\n\t// focusRef() {\n\t// \tthis.myRef.current.focus();\n\t// }\n\n\t// handleChange(e) {\n\t// \tthis.setState({milliSecondsElapsed: e.target.milliSecondsElapsed});\n\t// } \n\n\t// handleSubmit = e => {\n\t// \te.preventDefault();\n\n\n\t// }\n\n\t// getMilliseconds() {\n\t// \treturn (\"0\" + this.state.milliSecondsElapsed).slice(-2);\n\t// }\n\n\n\t// // var number = this.state.milliSecondsElapsed.toString().length;\n\t// getSeconds() {\n\t// \tvar milli = this.state.milliSecondsElapsed;\n\t// \tvar seconds = 0;\n\t// \tseconds = milli / 100;\n\n\t// \tvar myTrunc = Math.trunc(seconds);\n\n\t// \tmyTrunc = myTrunc % 60;\n\n\t// \treturn (\"0\" + myTrunc).slice(-2);\n\t// }\n\n\n\t// getMinutes() {\n\t// \tvar milli = this.state.milliSecondsElapsed;\n\t// \tvar seconds = 0;\n\t// \tvar minutes = 0;\n\t// \tseconds = milli / 100;\n\t// \tminutes = seconds / 60;\n\n\t// \tvar myTrunc = Math.trunc(minutes);\n\n\t// \treturn (\"0\" + myTrunc).slice(-2);\n\t\t\n\t// }\n\n\t// <input value={this.state.milliSecondsElapsed} ref={this.myRef} onChange={this.handleChange} />\n\trender() {\n\t\treturn (\n\n\t\t\t\n\t\t\t<div className=\"index\">\n\t\t\t\t<input type=\"text\" ref=\"anything\" onChange = {this.update.bind(this)} />\n\t\t\t\t<em>{this.state.milliSecondsElapsed}</em>\n\t\t\t</div>\n\n\t\t);\n\t}\n\n}\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}