{"ast":null,"code":"var _jsxFileName = \"/Users/Austin/NewWebsite/website/pages/times.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Layout from '../components/MyLayout.js'; //import { getTime } from '../lib/utils';\n\nimport Search from './search';\nimport App from \"../lib/App.js\";\nexport default class Times extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      // names: [],\n      // times: [],\n      people: [],\n      loading: true,\n      myRubiks: false\n    });\n  }\n\n  async componentDidMount() {\n    const url = \"http://localhost:3001/api/list\"; // const url = \"http://35.194.72.130/api/list\";\n\n    const response = await fetch(url);\n    const data = await response.json(); // console.log(data.times.length);\n\n    var newData = \"\";\n    console.log(data.times[3]);\n\n    for (var i = 0; i < data.times.length; i++) {\n      newData = i + 1 + \". \" + data.times[i].name + \", \" + data.times[i].time + \", \" + data.times[i].cube;\n      newData = newData.split('\\n').map(str => __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 45\n        }\n      }, str));\n      this.setState(previousState => ({\n        people: [...previousState.people, newData]\n      }));\n      this.setState({\n        loading: false\n      });\n    }\n  }\n\n  handleRubiks() {\n    this.setState({\n      myRubiks: true\n    });\n  }\n\n  render() {\n    return __jsx(Layout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 4\n      }\n    }, __jsx(\"div\", {\n      className: \"background\",\n      style: {\n        height: 575\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 5\n      }\n    }, __jsx(\"table\", {\n      align: \"left\",\n      width: \"50%\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 6\n      }\n    }, __jsx(App, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }\n    }), __jsx(Search, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }\n    })), __jsx(\"table\", {\n      align: \"right\",\n      className: \"tableForTimes\",\n      width: \"50%\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 6\n      }\n    }, __jsx(\"button\", {\n      className: \"button-style\",\n      onClick: this.handleRubiks,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }\n    }, \"Rubiks\"), __jsx(\"h1\", {\n      className: \"text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }\n    }, \"Best Times\"), this.state.loading || !this.state.people ? __jsx(\"div\", {\n      className: \"text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 8\n      }\n    }, \"There are not any times in the database. Record the first one!\") : this.state.myRubiks ? __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 8\n      }\n    }, \"it is true\") : __jsx(\"div\", {\n      className: \"text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 8\n      }\n    }, this.state.people))));\n  }\n\n}","map":{"version":3,"sources":["/Users/Austin/NewWebsite/website/pages/times.js"],"names":["Layout","Search","App","Times","React","Component","people","loading","myRubiks","componentDidMount","url","response","fetch","data","json","newData","console","log","times","i","length","name","time","cube","split","map","str","setState","previousState","handleRubiks","render","height","state"],"mappings":"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","sourcesContent":["import Layout from '../components/MyLayout.js';\n//import { getTime } from '../lib/utils';\nimport Search from './search'; \nimport App from \"../lib/App.js\";\n\n\nexport default class Times extends React.Component {\n\tstate = {\n\t\t// names: [],\n\t\t// times: [],\n\t\tpeople: [],\n\t\tloading: true,\n\t\tmyRubiks: false,\n\t}\n\n\tasync componentDidMount() {\n\t\tconst url = \"http://localhost:3001/api/list\"; // const url = \"http://35.194.72.130/api/list\";\n\t\tconst response = await fetch(url);\n\t\tconst data = await response.json();\n\t\t// console.log(data.times.length);\n\n\t\tvar newData = \"\";\n\n\t\tconsole.log(data.times[3]);\n\n\t\tfor (var i=0; i<data.times.length; i++) {\n\t\t\tnewData = i+1 + \". \" + data.times[i].name + \", \" + data.times[i].time + \", \" + data.times[i].cube;\n\t\t\tnewData = newData.split('\\n').map(str => <p>{str}</p>);\n\t\t\t\n\t\t\tthis.setState(previousState => ({\n\t\t\t\tpeople: [...previousState.people, newData]\n\t\t\t}));\n\t\t\tthis.setState({\n\t\t\t\tloading: false\n\t\t\t})\n\t\t}\n\n\t}\n\n\thandleRubiks() {\n\t\tthis.setState({\n\t\t\tmyRubiks: true\n\t\t})\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Layout>\n\t\t\t\t<div className='background' style={{height:575}}>\n\t\t\t\t\t<table align='left' width=\"50%\">\n\t\t\t\t\t\t<App />\n\t\t\t\t\t\t<Search />\n\t\t\t\t\t</table>\n\t\t\t\t\t<table align=\"right\" className=\"tableForTimes\" width=\"50%\">\n\t\t\t\t\t\t<button className='button-style' onClick={this.handleRubiks}>Rubiks</button>\n\t\t\t\t\t\t<h1 className='text'>Best Times</h1>\n\t\t\t\t\t\t{this.state.loading || !this.state.people ? (\n\t\t\t\t\t\t\t<div className='text'>There are not any times in the database. Record the first one!</div>\n\t\t\t\t\t\t) : this.state.myRubiks ? (\n\t\t\t\t\t\t\t<p>it is true</p>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<div className=\"text\">{this.state.people}</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</table>\n\t\t\t\t</div>\n\t\t\t</Layout>\n\t\t)\n\t}\n}\n\n"]},"metadata":{},"sourceType":"module"}