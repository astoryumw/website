{"ast":null,"code":"var _jsxFileName = \"/Users/Austin/website/pages/index.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useReducer, useRef } from 'react';\nimport ReactDOM from 'react-dom';\n\nclass Home extends React.Component {\n  // focus on start button before timer is started\n  // once its started switch focus to stop button\n  // redo\n  constructor(props) {\n    super(props); // create milliSeconds\n\n    this.state = {\n      milliSecondsElapsed: 0\n    };\n    this.updateState = this.updateState.bind(this);\n    this.clearInput = this.clearInput.bind(this); // this.handleChange = this.handleChange.bind(this);\n    // this.myRef = React.createRef();\n    // this.focusRef = this.focusRef.bind(this);\n  }\n\n  updateState(e) {\n    this.setState({\n      milliSecondsElapsed: e.target.value\n    });\n  }\n\n  clearInput() {\n    this.setState({\n      milliSecondsElapsed: 0\n    });\n    ReactDOM.findDOMNode(this.refs.myInput).focus();\n  } // update setState({milliSecondsElapsd: 0})\n  // focusRef() {\n  // \tthis.myRef.current.focus();\n  // }\n  // handleChange(e) {\n  // \tthis.setState({milliSecondsElapsed: e.target.milliSecondsElapsed});\n  // } \n  // handleSubmit = e => {\n  // \te.preventDefault();\n  // }\n  // getMilliseconds() {\n  // \treturn (\"0\" + this.state.milliSecondsElapsed).slice(-2);\n  // }\n  // // var number = this.state.milliSecondsElapsed.toString().length;\n  // getSeconds() {\n  // \tvar milli = this.state.milliSecondsElapsed;\n  // \tvar seconds = 0;\n  // \tseconds = milli / 100;\n  // \tvar myTrunc = Math.trunc(seconds);\n  // \tmyTrunc = myTrunc % 60;\n  // \treturn (\"0\" + myTrunc).slice(-2);\n  // }\n  // getMinutes() {\n  // \tvar milli = this.state.milliSecondsElapsed;\n  // \tvar seconds = 0;\n  // \tvar minutes = 0;\n  // \tseconds = milli / 100;\n  // \tminutes = seconds / 60;\n  // \tvar myTrunc = Math.trunc(minutes);\n  // \treturn (\"0\" + myTrunc).slice(-2);\n  // }\n  // <input value={this.state.milliSecondsElapsed} ref={this.myRef} onChange={this.handleChange} />\n\n\n  render() {\n    return __jsx(\"div\", {\n      className: \"index\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 4\n      }\n    }, __jsx(\"input\", {\n      value: this.state.milliSecondsElapsed,\n      onChange: this.updateState,\n      ref: \"myInput\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 5\n      }\n    }), __jsx(\"button\", {\n      onClick: this.clearInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 5\n      }\n    }, \"CLEAR\"), __jsx(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 5\n      }\n    }, this.state.data));\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["/Users/Austin/website/pages/index.js"],"names":["React","useEffect","useReducer","useRef","ReactDOM","Home","Component","constructor","props","state","milliSecondsElapsed","updateState","bind","clearInput","e","setState","target","value","findDOMNode","refs","myInput","focus","render","data"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,UAA1B,EAAsCC,MAAtC,QAAmD,OAAnD;AACA,OAAOC,QAAP,MAAqB,WAArB;;AAEA,MAAMC,IAAN,SAAmBL,KAAK,CAACM,SAAzB,CAAmC;AAElC;AACA;AACA;AAEAC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN,EADkB,CAGlB;;AACA,SAAKC,KAAL,GAAa;AAACC,MAAAA,mBAAmB,EAAE;AAAtB,KAAb;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBD,IAAhB,CAAqB,IAArB,CAAlB,CANkB,CAOlB;AACA;AACA;AAEA;;AAEDD,EAAAA,WAAW,CAACG,CAAD,EAAI;AACd,SAAKC,QAAL,CAAc;AAACL,MAAAA,mBAAmB,EAAEI,CAAC,CAACE,MAAF,CAASC;AAA/B,KAAd;AACA;;AAEDJ,EAAAA,UAAU,GAAG;AACZ,SAAKE,QAAL,CAAc;AAACL,MAAAA,mBAAmB,EAAE;AAAtB,KAAd;AACAN,IAAAA,QAAQ,CAACc,WAAT,CAAqB,KAAKC,IAAL,CAAUC,OAA/B,EAAwCC,KAAxC;AACA,GA1BiC,CA4BlC;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAGA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;;;AACAC,EAAAA,MAAM,GAAG;AACR,WAGC;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAO,MAAA,KAAK,EAAI,KAAKb,KAAL,CAAWC,mBAA3B;AAAgD,MAAA,QAAQ,EAAI,KAAKC,WAAjE;AAA8E,MAAA,GAAG,EAAC,SAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,EAEC;AAAQ,MAAA,OAAO,EAAI,KAAKE,UAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFD,EAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKJ,KAAL,CAAWc,IAAhB,CAHD,CAHD;AAUA;;AAxFiC;;AA4FnC,eAAelB,IAAf","sourcesContent":["import React, {useEffect, useReducer, useRef} from 'react';\nimport ReactDOM from 'react-dom';\n\nclass Home extends React.Component {\n\n\t// focus on start button before timer is started\n\t// once its started switch focus to stop button\n\t// redo\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\t// create milliSeconds\n\t\tthis.state = {milliSecondsElapsed: 0};\n\t\tthis.updateState = this.updateState.bind(this);\n\t\tthis.clearInput = this.clearInput.bind(this);\n\t\t// this.handleChange = this.handleChange.bind(this);\n\t\t// this.myRef = React.createRef();\n\t\t// this.focusRef = this.focusRef.bind(this);\n\n\t}\n\n\tupdateState(e) {\n\t\tthis.setState({milliSecondsElapsed: e.target.value })\n\t}\n\n\tclearInput() {\n\t\tthis.setState({milliSecondsElapsed: 0});\n\t\tReactDOM.findDOMNode(this.refs.myInput).focus();\n\t}\n\n\t// update setState({milliSecondsElapsd: 0})\n\n\t// focusRef() {\n\t// \tthis.myRef.current.focus();\n\t// }\n\n\t// handleChange(e) {\n\t// \tthis.setState({milliSecondsElapsed: e.target.milliSecondsElapsed});\n\t// } \n\n\t// handleSubmit = e => {\n\t// \te.preventDefault();\n\n\n\t// }\n\n\t// getMilliseconds() {\n\t// \treturn (\"0\" + this.state.milliSecondsElapsed).slice(-2);\n\t// }\n\n\n\t// // var number = this.state.milliSecondsElapsed.toString().length;\n\t// getSeconds() {\n\t// \tvar milli = this.state.milliSecondsElapsed;\n\t// \tvar seconds = 0;\n\t// \tseconds = milli / 100;\n\n\t// \tvar myTrunc = Math.trunc(seconds);\n\n\t// \tmyTrunc = myTrunc % 60;\n\n\t// \treturn (\"0\" + myTrunc).slice(-2);\n\t// }\n\n\n\t// getMinutes() {\n\t// \tvar milli = this.state.milliSecondsElapsed;\n\t// \tvar seconds = 0;\n\t// \tvar minutes = 0;\n\t// \tseconds = milli / 100;\n\t// \tminutes = seconds / 60;\n\n\t// \tvar myTrunc = Math.trunc(minutes);\n\n\t// \treturn (\"0\" + myTrunc).slice(-2);\n\t\t\n\t// }\n\n\t// <input value={this.state.milliSecondsElapsed} ref={this.myRef} onChange={this.handleChange} />\n\trender() {\n\t\treturn (\n\n\t\t\t\n\t\t\t<div className=\"index\">\n\t\t\t\t<input value = {this.state.milliSecondsElapsed} onChange = {this.updateState} ref=\"myInput\"></input>\n\t\t\t\t<button onClick = {this.clearInput}>CLEAR</button>\n\t\t\t\t<h4>{this.state.data}</h4>\n\t\t\t</div>\n\n\t\t);\n\t}\n\n}\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}