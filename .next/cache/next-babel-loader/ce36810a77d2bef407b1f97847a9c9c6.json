{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport { myArray } from \"./index\";\n\nvar Example = /*#__PURE__*/function (_React$Component) {\n  _inherits(Example, _React$Component);\n\n  var _super = _createSuper(Example);\n\n  function Example(props) {\n    var _this;\n\n    _classCallCheck(this, Example);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"handleAdd\", function () {\n      _this.setState(function (previousState) {\n        return {\n          myArray: [_this.state.time].concat(_toConsumableArray(previousState.myArray))\n        };\n      }); // setTimes method here\n      // let obj = this.state.time + \",\" + this.state.myArray;\n      // localStorage.setItem('myTimes', JSON.stringify(obj));\n\n    });\n\n    _this.state = {\n      myArray: [],\n      time: 0\n    }; // this.setTimes = this.setTimes.bind(this);\n\n    _this.getTimes = _this.getTimes.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Example, [{\n    key: \"handleUpdate\",\n    value: function handleUpdate(evt) {\n      this.setState({\n        time: evt.target.value\n      });\n    }\n  }, {\n    key: \"setTimes\",\n    value: function setTimes() {\n      var obj = this.state.myArray;\n      localStorage.setItem('myTimes', JSON.stringify(obj));\n      console.log('test');\n    } // i think myArray is not working after i load because of something in getTimes()\n\n  }, {\n    key: \"getTimes\",\n    value: function getTimes() {\n      var data = localStorage.getItem('myTimes');\n      data = JSON.parse(data);\n      this.setState({\n        myArray: data\n      });\n    } // maybe add if else? \n    // if this.getTimes is nothing then start at empty array?\n    // <button onClick={ () => this.setTimes() }>Save Times</button>\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(\"div\", null, __jsx(\"p\", null, \"Add a number to the list by clicking the button\"), __jsx(\"p\", null, this.state.myArray.join(\", \")), __jsx(\"p\", null, __jsx(\"input\", {\n        type: \"text\",\n        value: this.state.time,\n        onChange: this.handleUpdate.bind(this)\n      })), __jsx(\"button\", {\n        className: \"button-style\",\n        onClick: this.handleAdd.bind(this)\n      }, \"Add\"), __jsx(\"button\", {\n        onClick: function onClick() {\n          return _this2.getTimes();\n        }\n      }, \"Load Times\"), __jsx(\"button\", {\n        onClick: function onClick() {\n          return _this2.setTimes();\n        }\n      }, \"Save Times\"));\n    }\n  }]);\n\n  return Example;\n}(React.Component);\n\nexport { Example as default };","map":null,"metadata":{},"sourceType":"module"}