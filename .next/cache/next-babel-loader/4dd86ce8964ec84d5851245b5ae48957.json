{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/Austin/NewWebsite/website/lib/App.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n// App.js (client)\nimport React from 'react';\nimport { addTime } from \"./util\";\n\nfunction App() {\n  _s();\n\n  var _this = this;\n\n  var _React$useState = React.useState(\"\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      name = _React$useState2[0],\n      setName = _React$useState2[1];\n\n  var _React$useState3 = React.useState(\"\"),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      time = _React$useState4[0],\n      setTime = _React$useState4[1];\n\n  var _React$useState5 = React.useState(\"\"),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      cube = _React$useState6[0],\n      setCube = _React$useState6[1];\n\n  var _React$useState7 = React.useState(false),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      click = _React$useState8[0],\n      setClick = _React$useState8[1];\n\n  var _React$useState9 = React.useState(false),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      rubiks = _React$useState10[0],\n      setRubiks = _React$useState10[1];\n\n  var _React$useState11 = React.useState(false),\n      _React$useState12 = _slicedToArray(_React$useState11, 2),\n      oh = _React$useState12[0],\n      setOh = _React$useState12[1];\n\n  var rx_live = /^[+-]?\\d*(?:[.,]\\d*)?$/;\n\n  function handleUpdate(evt) {\n    setName(evt.target.value);\n  }\n\n  function handleUpdateTime(evt) {\n    if (rx_live.test(evt.target.value)) {\n      setTime(evt.target.value);\n    } else {\n      alert(\"Please enter a number here.\");\n    }\n  }\n\n  function handleRubiks(evt) {\n    setCube(\"3x3x3\");\n    setRubiks(true);\n    setOh(false);\n  }\n\n  function handleOh(evt) {\n    setCube(\"3x3x3 OH\");\n    setRubiks(false);\n    setOh(true);\n  }\n\n  function handleClick(evt) {\n    setClick(true);\n  }\n\n  function handleAddTime(_x) {\n    return _handleAddTime.apply(this, arguments);\n  } // <p><input type='text' value={cube} onChange={handleCube} /></p>\n\n\n  function _handleAddTime() {\n    _handleAddTime = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(evt) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return addTime(name, time);\n\n            case 2:\n              alert(\"Added!\");\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _handleAddTime.apply(this, arguments);\n  }\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 10\n    }\n  }, __jsx(\"h4\", {\n    className: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, \"Enter your name, your time and then the cube you used to add it!\"), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, __jsx(\"input\", {\n    type: \"text\",\n    value: name,\n    onChange: handleUpdate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 8\n    }\n  })), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, __jsx(\"input\", {\n    type: \"text\",\n    value: time,\n    onChange: handleUpdateTime,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 8\n    }\n  })), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, click), !click ? __jsx(\"button\", {\n    className: \"button-style\",\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, \"Select Cube\") : __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, __jsx(\"button\", {\n    className: \"button-style\",\n    onClick: handleRubiks,\n    ref: function ref(_ref) {\n      return _this.startBtn = _ref;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, \"3x3x3\"), __jsx(\"button\", {\n    className: \"button-style\",\n    onClick: handleOh,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, \"3x3x3 OH\")), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }), __jsx(\"button\", {\n    className: \"button-style\",\n    onClick: handleAddTime,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, \"Add Time\"));\n}\n\n_s(App, \"kx/PprYUoNcNrPU0Vh+Z99ENwJU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/Austin/NewWebsite/website/lib/App.js"],"names":["React","addTime","App","useState","name","setName","time","setTime","cube","setCube","click","setClick","rubiks","setRubiks","oh","setOh","rx_live","handleUpdate","evt","target","value","handleUpdateTime","test","alert","handleRubiks","handleOh","handleClick","handleAddTime","ref","startBtn"],"mappings":"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","sourcesContent":["// App.js (client)\nimport React from 'react';\nimport { addTime } from \"./util\";\n\n\n\nfunction App() {\n  const [name, setName] = React.useState(\"\")\n  const [time, setTime] = React.useState(\"\")\n  const [cube, setCube] = React.useState(\"\")\n  const [click, setClick] = React.useState(false);\n  const [rubiks, setRubiks] = React.useState(false);\n  const [oh, setOh] = React.useState(false);\n  const rx_live = /^[+-]?\\d*(?:[.,]\\d*)?$/;\n\n  function handleUpdate(evt) {\n    setName(evt.target.value);\n  }\n\n  function handleUpdateTime(evt) {\n    if (rx_live.test(evt.target.value)) {\n      setTime(evt.target.value);\n    } else {\n      alert(\"Please enter a number here.\")\n    }\n  }\n\n  function handleRubiks(evt) {\n    setCube(\"3x3x3\");\n    setRubiks(true);\n    setOh(false);\n  }\n\n  function handleOh(evt) {\n    setCube(\"3x3x3 OH\");\n    setRubiks(false);\n    setOh(true);\n  }\n\n  function handleClick(evt) {\n    setClick(true);\n  }\n\n\n  async function handleAddTime(evt) {\n    await addTime(name,time);\n    alert(\"Added!\");\n  }\n\n  // <p><input type='text' value={cube} onChange={handleCube} /></p>\n  return <div>\n    <h4 className=\"text\">Enter your name, your time and then the cube you used to add it!</h4>\n    <p><input type='text' value={name} onChange={handleUpdate} /></p>\n    <p><input type='text' value={time} onChange={handleUpdateTime} /></p>\n    <p>{click}</p>\n    {!click ? (\n      <button className='button-style' onClick={handleClick}>Select Cube</button> \n    ) : (  \n    <div>\n      <button className='button-style' onClick={handleRubiks} ref={(ref) => (this.startBtn = ref)}>3x3x3</button>\n      <button className='button-style' onClick={handleOh}>3x3x3 OH</button>\n    </div>\n    )}\n    <p></p>\n    <button className='button-style' onClick={handleAddTime}>Add Time</button>\n  </div>\n}\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}