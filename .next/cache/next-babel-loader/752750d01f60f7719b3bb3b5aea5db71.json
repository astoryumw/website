{"ast":null,"code":"var _jsxFileName = \"/Users/Austin/website/pages/index.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"handleStartClick\", () => {\n      this.setState({\n        milliSecondsElapsed: 0\n      });\n      this.timer = setInterval(() => {\n        this.setState({\n          milliSecondsElapsed: this.state.milliSecondsElapsed + 1\n        });\n      }, 10);\n    });\n\n    _defineProperty(this, \"handleStopClick\", () => {\n      clearInterval(this.timer);\n    });\n\n    this.state = {\n      milliSecondsElapsed: 0\n    };\n  }\n\n  componentWillMount() {\n    document.addEventListener(\"keydown\", this.onKeyPressed.bind(this));\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"keydown\", this.onKeyPressed.bind(this));\n  }\n\n  onKeyPressed(e) {\n    console.log(e.keyCode);\n  }\n\n  getMilliseconds() {\n    return (\"0\" + this.state.milliSecondsElapsed).slice(-2);\n  } // var number = this.state.milliSecondsElapsed.toString().length;\n\n\n  getSeconds() {\n    var milli = this.state.milliSecondsElapsed;\n    var seconds = 0;\n    seconds = milli / 100;\n    var myTrunc = Math.trunc(seconds);\n    myTrunc = myTrunc % 60;\n    return (\"0\" + myTrunc).slice(-2);\n  }\n\n  getMinutes() {\n    var milli = this.state.milliSecondsElapsed;\n    var seconds = 0;\n    var minutes = 0;\n    seconds = milli / 100;\n    minutes = seconds / 60;\n    var myTrunc = Math.trunc(minutes);\n    return (\"0\" + myTrunc).slice(-2);\n  }\n\n  // <h1>{this.state.milliSecondsElapsed.toString().length}</h1>\n  // <h1>{this.state.milliSecondsElapsed}</h1>\n  render() {\n    return __jsx(\"div\", {\n      onKeyDown: this.onKeyPressed,\n      tabIndex: \"0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 4\n      }\n    }, __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 5\n      }\n    }, this.getMinutes(), \":\", this.getSeconds(), \":\", this.getMilliseconds()), __jsx(\"button\", {\n      type: \"button\",\n      onClick: this.handleStartClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 5\n      }\n    }, \" start \"), __jsx(\"button\", {\n      type: \"button\",\n      onClick: this.handleStopClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 5\n      }\n    }, \" stop \"));\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["/Users/Austin/website/pages/index.js"],"names":["React","Home","Component","constructor","props","setState","milliSecondsElapsed","timer","setInterval","state","clearInterval","componentWillMount","document","addEventListener","onKeyPressed","bind","componentWillUnmount","removeEventListener","e","console","log","keyCode","getMilliseconds","slice","getSeconds","milli","seconds","myTrunc","Math","trunc","getMinutes","minutes","render","handleStartClick","handleStopClick"],"mappings":"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","sourcesContent":["import React from 'react';\n\nclass Home extends React.Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {milliSecondsElapsed: 0};\n\t\t\n\t}\n\n\tcomponentWillMount() {\n     \tdocument.addEventListener(\"keydown\", this.onKeyPressed.bind(this));\n    }\n\n    componentWillUnmount() {\n    \tdocument.removeEventListener(\"keydown\", this.onKeyPressed.bind(this));\n    }      \n\n    onKeyPressed(e) {\n    \tconsole.log(e.keyCode);\n    }\n\n\n\n\tgetMilliseconds() {\n\t\treturn (\"0\" + this.state.milliSecondsElapsed).slice(-2);\n\t}\n\t// var number = this.state.milliSecondsElapsed.toString().length;\n\tgetSeconds() {\n\t\tvar milli = this.state.milliSecondsElapsed;\n\t\tvar seconds = 0;\n\t\tseconds = milli / 100;\n\n\t\tvar myTrunc = Math.trunc(seconds);\n\n\t\tmyTrunc = myTrunc % 60;\n\n\t\treturn (\"0\" + myTrunc).slice(-2);\n\t}\n\n\tgetMinutes() {\n\t\tvar milli = this.state.milliSecondsElapsed;\n\t\tvar seconds = 0;\n\t\tvar minutes = 0;\n\t\tseconds = milli / 100;\n\t\tminutes = seconds / 60;\n\n\t\tvar myTrunc = Math.trunc(minutes);\n\n\t\treturn (\"0\" + myTrunc).slice(-2);\n\t\t\n\t}\n\n\thandleStartClick = () => {\n\t\tthis.setState({\n\t\t\tmilliSecondsElapsed: (0)\n\t\t});\n\t\tthis.timer = setInterval(() => {\n\t\t\tthis.setState({\n\t\t\t\tmilliSecondsElapsed: (this.state.milliSecondsElapsed + 1)\n\t\t\t});\n\t\t}, 10)\n\t}\n\n\thandleStopClick = () => {\n\t\tclearInterval(this.timer);\n\t}\n\n\t// <h1>{this.state.milliSecondsElapsed.toString().length}</h1>\n\t// <h1>{this.state.milliSecondsElapsed}</h1>\n\n\trender() {\n\t\treturn (\n\t\t\t<div onKeyDown={this.onKeyPressed} tabIndex=\"0\">\n\n\t\t\t\t<h1>{this.getMinutes()}:{this.getSeconds()}:{this.getMilliseconds()}</h1>\n\t\t\t\t<button type=\"button\" onClick={this.handleStartClick}> start </button>\n\t\t\t\t<button type=\"button\" onClick={this.handleStopClick}> stop </button>\n\t\t\t</div>\n\t\t);\n\t}\n\n}\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}