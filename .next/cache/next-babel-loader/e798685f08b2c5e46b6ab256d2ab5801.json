{"ast":null,"code":"var _jsxFileName = \"/Users/Austin/NewWebsite/website/pages/browserTest.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport Layout from \"../components/MyLayout.js\";\nexport default class browsersTest extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      // names: [],\n      // times: [],\n      people: []\n    });\n  }\n\n  async componentDidMount() {\n    const url = \"http://35.194.72.130/api/list\";\n    const response = await fetch(url);\n    const data = await response.json();\n    console.log(data.times.length);\n    var word = \"\",\n        otherWord = \"\";\n\n    for (var i = 0; i < data.times.length; i++) {\n      word = data.times[i].name + \" \" + data.times[i].time;\n      otherWord = word.split('\\n').map(str => __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 44\n        }\n      }, str));\n      console.log(otherWord[i].s);\n      this.setState(previousState => ({\n        people: [...previousState.people, word.split('\\n').map(str => __jsx(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 67\n          }\n        }, str))]\n      }));\n    } // console.log(this.state.people);\n\n  }\n\n  render() {\n    return __jsx(Layout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 4\n      }\n    }, __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 5\n      }\n    }, this.state.people.join(\"\\n\")));\n  }\n\n}","map":{"version":3,"sources":["/Users/Austin/NewWebsite/website/pages/browserTest.js"],"names":["React","Layout","browsersTest","Component","people","componentDidMount","url","response","fetch","data","json","console","log","times","length","word","otherWord","i","name","time","split","map","str","s","setState","previousState","render","state","join"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AAEA,eAAe,MAAMC,YAAN,SAA2BF,KAAK,CAACG,SAAjC,CAA2C;AAAA;AAAA;;AAAA,mCACjD;AACP;AACA;AACAC,MAAAA,MAAM,EAAE;AAHD,KADiD;AAAA;;AAOlC,QAAjBC,iBAAiB,GAAG;AACzB,UAAMC,GAAG,GAAG,+BAAZ;AACA,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,CAA5B;AACA,UAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACI,KAAL,CAAWC,MAAvB;AAEA,QAAIC,IAAI,GAAG,EAAX;AAAA,QAAeC,SAAS,GAAG,EAA3B;;AACA,SAAK,IAAIC,CAAC,GAAC,CAAX,EAAcA,CAAC,GAACR,IAAI,CAACI,KAAL,CAAWC,MAA3B,EAAmCG,CAAC,EAApC,EAAwC;AACvCF,MAAAA,IAAI,GAAGN,IAAI,CAACI,KAAL,CAAWI,CAAX,EAAcC,IAAd,GAAqB,GAArB,GAA2BT,IAAI,CAACI,KAAL,CAAWI,CAAX,EAAcE,IAAhD;AACAH,MAAAA,SAAS,GAAGD,IAAI,CAACK,KAAL,CAAW,IAAX,EAAiBC,GAAjB,CAAqBC,GAAG,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIA,GAAJ,CAA5B,CAAZ;AACAX,MAAAA,OAAO,CAACC,GAAR,CAAYI,SAAS,CAAEC,CAAF,CAAT,CAAcM,CAA1B;AAEA,WAAKC,QAAL,CAAcC,aAAa,KAAK;AAC/BrB,QAAAA,MAAM,EAAE,CAAC,GAAGqB,aAAa,CAACrB,MAAlB,EAA0BW,IAAI,CAACK,KAAL,CAAW,IAAX,EAAiBC,GAAjB,CAAqBC,GAAG,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAIA,GAAJ,CAA5B,CAA1B;AADuB,OAAL,CAA3B;AAGA,KAfwB,CAgBzB;;AAEA;;AAEDI,EAAAA,MAAM,GAAG;AACR,WACC,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,KAAKC,KAAL,CAAWvB,MAAX,CAAkBwB,IAAlB,CAAuB,IAAvB,CADF,CADD,CADD;AAOA;;AAnCwD","sourcesContent":["import React from \"react\";\nimport Layout from \"../components/MyLayout.js\"\n\nexport default class browsersTest extends React.Component {\n\tstate = {\n\t\t// names: [],\n\t\t// times: [],\n\t\tpeople: [],\n\t}\n\n\tasync componentDidMount() {\n\t\tconst url = \"http://35.194.72.130/api/list\";\n\t\tconst response = await fetch(url);\n\t\tconst data = await response.json();\n\t\tconsole.log(data.times.length);\n\n\t\tvar word = \"\", otherWord = \"\";\n\t\tfor (var i=0; i<data.times.length; i++) {\n\t\t\tword = data.times[i].name + \" \" + data.times[i].time;\n\t\t\totherWord = word.split('\\n').map(str => <p>{str}</p>)\n\t\t\tconsole.log(otherWord.[i].s);\n\n\t\t\tthis.setState(previousState => ({\n\t\t\t\tpeople: [...previousState.people, word.split('\\n').map(str => <p>{str}</p>)]\n\t\t\t}));\n\t\t}\n\t\t// console.log(this.state.people);\n\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Layout>\n\t\t\t\t<div>\n\t\t\t\t\t{this.state.people.join(\"\\n\")}\n\t\t\t\t</div>\n\t\t\t</Layout>\n\t\t)\n\t}\n}"]},"metadata":{},"sourceType":"module"}