{"ast":null,"code":"var _jsxFileName = \"/Users/Austin/website/lib/App.js\";\nvar __jsx = React.createElement;\n// App.js (client)\nimport React from 'react';\nimport { addName } from \"util\"; // I'm using hooks... That just avoids `this`\n\nfunction App() {\n  const [name, setName] = React.useState(\"\");\n\n  function handleUpdate(evt) {\n    setName(evt.target.value);\n  } // I assume you want to add the name with a timestamp.\n  // There were name and time names confused.\n\n\n  async function handleAddName(evt) {\n    await addName(evt);\n  }\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 10\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, __jsx(\"input\", {\n    type: \"text\",\n    value: name,\n    onChange: handleUpdate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 8\n    }\n  })), __jsx(\"button\", {\n    className: \"button-style\",\n    onClick: handleAddName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, \"Add Name\"));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/Austin/website/lib/App.js"],"names":["React","addName","App","name","setName","useState","handleUpdate","evt","target","value","handleAddName"],"mappings":";;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,MAAtB,C,CAEA;;AACA,SAASC,GAAT,GAAe;AACb,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,KAAK,CAACK,QAAN,CAAe,EAAf,CAAxB;;AAEA,WAASC,YAAT,CAAsBC,GAAtB,EAA2B;AACzBH,IAAAA,OAAO,CAACG,GAAG,CAACC,MAAJ,CAAWC,KAAZ,CAAP;AACD,GALY,CAOb;AACA;;;AACA,iBAAeC,aAAf,CAA6BH,GAA7B,EAAkC;AAChC,UAAMN,OAAO,CAACM,GAAD,CAAb;AACD;;AAID,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAG;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,KAAK,EAAEJ,IAA1B;AAAgC,IAAA,QAAQ,EAAEG,YAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,CADK,EAEL;AAAQ,IAAA,SAAS,EAAC,cAAlB;AAAiC,IAAA,OAAO,EAAEI,aAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFK,CAAP;AAID;;AAED,eAAeR,GAAf","sourcesContent":["// App.js (client)\nimport React from 'react';\nimport {addName} from \"util\";\n\n// I'm using hooks... That just avoids `this`\nfunction App() {\n  const [name, setName] = React.useState(\"\")\n\n  function handleUpdate(evt) {\n    setName(evt.target.value);\n  }\n\n  // I assume you want to add the name with a timestamp.\n  // There were name and time names confused.\n  async function handleAddName(evt) {\n    await addName(evt);\n  }\n\n\n\n  return <div>\n    <p><input type='text' value={name} onChange={handleUpdate} /></p>\n    <button className='button-style' onClick={handleAddName}>Add Name</button>\n  </div>\n}\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}