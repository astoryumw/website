{"ast":null,"code":"var _jsxFileName = \"/Users/Austin/website/pages/index.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useReducer, useRef } from 'react';\nimport ReactDOM from 'react-dom';\n\nclass Home extends React.Component {\n  // focus on start button before timer is started\n  // once its started switch focus to stop button\n  // redo\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"keyPress\", e => {\n      // some logic to assess stop/start of timer\n      if (this.state.milliSecondsElapsed === 0) {\n        this.startBtn.click();\n      } else if (this.state.timerInProgress === false) {\n        this.startBtn.click();\n      } else {\n        this.stopBtn.click();\n      }\n    });\n\n    _defineProperty(this, \"handleStart\", () => {\n      if (this.state.timerInProgress === true) {\n        return;\n      }\n\n      this.setState({\n        milliSecondsElapsed: 0\n      });\n      this.timer = setInterval(() => {\n        this.setState({\n          milliSecondsElapsed: this.state.milliSecondsElapsed + 1,\n          timerInProgress: true\n        }, () => {\n          this.stopBtn.focus(); // stop the timer\n        });\n      }, 10);\n    });\n\n    _defineProperty(this, \"handleStop\", () => {\n      this.setState({\n        timerInProgress: false\n      }, () => {\n        clearInterval(this.timer);\n        this.startBtn.focus(); // start the timer\n      });\n    });\n\n    _defineProperty(this, \"keyPress\", e => {\n      // some logic to assess stop/start of timer\n      if (this.state.milliSecondsElapsed === 0) {\n        this.handleStart();\n      } else if (this.state.timerInProgress === false) {\n        this.handleStart();\n      } else {\n        this.handleStop();\n      }\n    });\n\n    this.state = {\n      milliSecondsElapsed: 0,\n      timerInProgress: false // state to detect when timer has started\n\n    };\n    this.updateState = this.updateState.bind(this);\n    this.startBtn = React.createRef();\n    this.stopBtn = React.createRef();\n  }\n\n  updateState(e) {\n    this.setState({\n      milliSecondsElapsed: e.target.milliSecondsElapsed\n    });\n  }\n\n  startBtn(e) {\n    if (e.keyCode === 32) {\n      componentDidMount();\n    }\n  }\n\n  stopBtn(e) {\n    if (e.keyCode === 32) {\n      componentDidMount();\n    }\n  }\n\n  getMilliseconds() {\n    return (\"0\" + this.state.milliSecondsElapsed).slice(-2);\n  }\n\n  getSeconds() {\n    var milli = this.state.milliSecondsElapsed;\n    var seconds = 0;\n    seconds = milli / 100;\n    var myTrunc = Math.trunc(seconds);\n    myTrunc = myTrunc % 60;\n    return (\"0\" + myTrunc).slice(-2);\n  }\n\n  getMinutes() {\n    var milli = this.state.milliSecondsElapsed;\n    var seconds = 0;\n    var minutes = 0;\n    seconds = milli / 100;\n    minutes = seconds / 60;\n    var myTrunc = Math.trunc(minutes);\n    return (\"0\" + myTrunc).slice(-2);\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"keypress\", this.keyPress);\n  }\n\n  // <button onClick = {this.handleStart}>START</button>\n  // <button onClick = {this.handleStop}>STOP</button>\n  // <input value = {this.state.milliSecondsElapsed} onChange = {this.updateState} ref={this.textInput}/>\n  render() {\n    return __jsx(\"div\", {\n      className: \"index\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 4\n      }\n    }, __jsx(\"input\", {\n      value: this.state.milliSecondsElapsed,\n      onChange: this.updateState,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 4\n      }\n    }), __jsx(\"button\", {\n      onClick: this.handleStart,\n      ref: ref => this.startBtn = ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 5\n      }\n    }, \"START\"), __jsx(\"button\", {\n      onClick: this.handleStop,\n      ref: ref => this.startBtn = ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 5\n      }\n    }, \"STOP\"));\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["/Users/Austin/website/pages/index.js"],"names":["React","useEffect","useReducer","useRef","ReactDOM","Home","Component","constructor","props","e","state","milliSecondsElapsed","startBtn","click","timerInProgress","stopBtn","setState","timer","setInterval","focus","clearInterval","handleStart","handleStop","updateState","bind","createRef","target","keyCode","componentDidMount","getMilliseconds","slice","getSeconds","milli","seconds","myTrunc","Math","trunc","getMinutes","minutes","window","addEventListener","keyPress","render","ref"],"mappings":"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","sourcesContent":["import React, {useEffect, useReducer, useRef} from 'react';\nimport ReactDOM from 'react-dom';\n\nclass Home extends React.Component {\n\n\t// focus on start button before timer is started\n\t// once its started switch focus to stop button\n\t// redo\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tmilliSecondsElapsed: 0,\n\t\t\ttimerInProgress: false // state to detect when timer has started\n\t\t};\n\t\tthis.updateState = this.updateState.bind(this);\n\t\tthis.startBtn = React.createRef();\n\t\tthis.stopBtn = React.createRef();\n\t}\n\n\tupdateState(e) {\n\t\tthis.setState({milliSecondsElapsed: e.target.milliSecondsElapsed })\n\t}\n\n\tstartBtn(e) {\n\t\tif (e.keyCode === 32) {\n\t\t\tcomponentDidMount();\n\t\t}\n\t}\n\n\tstopBtn(e) {\n\t\tif (e.keyCode === 32) {\n\t\t\tcomponentDidMount();\n\t\t}\n\t}\n\n\tkeyPress = (e) => {\n\t  // some logic to assess stop/start of timer\n\t  if (this.state.milliSecondsElapsed === 0) {\n\t    this.startBtn.click();\n\t  } else if (this.state.timerInProgress === false) {\n\t    this.startBtn.click();\n\t  } else {\n\t    this.stopBtn.click();\n\t  }\n\t};\n\n\tgetMilliseconds() {\n\t\treturn (\"0\" + this.state.milliSecondsElapsed).slice(-2);\n\t}\n\n\tgetSeconds() {\n\t\tvar milli = this.state.milliSecondsElapsed;\n\t\tvar seconds = 0;\n\t\tseconds = milli / 100;\n\t\tvar myTrunc = Math.trunc(seconds);\n\t\tmyTrunc = myTrunc % 60;\n\t\treturn (\"0\" + myTrunc).slice(-2);\n\t}\n\n\tgetMinutes() {\n\t\tvar milli = this.state.milliSecondsElapsed;\n\t\tvar seconds = 0;\n\t\tvar minutes = 0;\n\t\tseconds = milli / 100;\n\t\tminutes = seconds / 60;\n\t\tvar myTrunc = Math.trunc(minutes);\n\t\treturn (\"0\" + myTrunc).slice(-2);\n\t}\n\n\thandleStart = () => {\n\t\tif (this.state.timerInProgress === true) {\n\t\t\treturn;\n\t\t}\n\t\tthis.setState({\n\t\t\tmilliSecondsElapsed: (0)\n\t\t});\n\t\tthis.timer = setInterval(() => {\n\t\t\tthis.setState({\n\t\t\t\tmilliSecondsElapsed: (this.state.milliSecondsElapsed + 1),\n\t\t\t\ttimerInProgress: true\n\t\t\t},\n\t\t\t() => {\n\t\t\t\tthis.stopBtn.focus(); // stop the timer\n\t\t\t});\n\t\t}, 10)\n\t}\n\n\thandleStop = () => {\n  \t\tthis.setState(\n    \t\t{\n      \t\t\ttimerInProgress: false\n    \t\t},\n    \t\t() => {\n      \t\tclearInterval(this.timer);\n      \t\tthis.startBtn.focus(); // start the timer\n    \t\t}\n  \t\t);\n\t};\n\n\tcomponentDidMount() {\n\t\twindow.addEventListener(\"keypress\", this.keyPress);\n\n\t}\n\n\tkeyPress = (e) => {\n    \t// some logic to assess stop/start of timer\n   \t\tif (this.state.milliSecondsElapsed === 0) {\n\t        this.handleStart();\n\t    } else if (this.state.timerInProgress === false) {\n\t        this.handleStart();\n\t    } else {\n\t        this.handleStop();\n\t    }\n\t};\n\n\n\n\t// <button onClick = {this.handleStart}>START</button>\n\t// <button onClick = {this.handleStop}>STOP</button>\n\t// <input value = {this.state.milliSecondsElapsed} onChange = {this.updateState} ref={this.textInput}/>\n\n\trender() {\n\t\treturn (\t\t\t\n\t\t\t<div className=\"index\">\n\t\t\t<input value={this.state.milliSecondsElapsed} onChange={this.updateState} />\n\t\t\t\t<button onClick={this.handleStart} ref={(ref) => (this.startBtn = ref)}>START</button>\n\t\t\t\t<button onClick={this.handleStop} ref={(ref) => (this.startBtn = ref)}>STOP</button>\n\n\t\t\t</div>\n\n\t\t);\n\t}\n\n}\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}