{"ast":null,"code":"var _jsxFileName = \"/Users/Austin/NewWebsite/website/pages/search.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { getInfo } from \"../lib/utilSearch\";\n\nclass Search extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      search: \"\"\n    };\n    this.state = {\n      length: 0\n    };\n    this.state = {\n      mySolves: []\n    };\n  }\n\n  handleUpdate(evt) {\n    this.setState({\n      search: evt.target.value\n    });\n  }\n\n  async handleSearch(evt) {\n    // console.log(this.state.search);\n    const user = await getInfo(this.state.search);\n    console.log(user.solves); // this.setState({ user: user.solves });\n\n    this.setState({\n      user\n    });\n    var list = \"\";\n\n    for (var i = 0; i < user.solves.length; i++) {\n      list = user.solves[i].name + \" \" + user.solves[i].time + \" \" + user.solves[i].cube + \"\\n\";\n      list = list.split('\\n').map(str => __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 41\n        }\n      }, \" \", str, \" \"));\n      console.log(list[0].props.children);\n      this.setState(previousState => ({\n        mySolves: [...previousState.mySolves, list[0].props.children]\n      }));\n    }\n\n    console.log(this.state.mySolves);\n  }\n\n  async componentDidMount() {\n    const url = \"http://localhost:3001/api/length\";\n    const response = await fetch(url);\n    const data = await response.json(); // console.log(data.rows);\n    // this isn't defining anything\n\n    try {\n      this.setState({\n        length: data.size[0].rows\n      });\n    } catch (err) {}\n  }\n  /* render() {\n  \treturn (\n  \t\t<div>\n  \t\t<h4 className=\"text\">Enter a name below to see all the times!</h4>\n  \t\t<p><input type='text' value={this.state.search} onChange={this.handleUpdate.bind(this)} /></p>\n  \t\t<button className=\"button-style\" onClick={this.handleSearch.bind(this)}>Search</button>\n  \t\t\t{this.state.user ? <div>\n  \t\t\t<h4 className='text'> {this.state.user.name}, {this.state.user.time} </h4>\n  \t\t\t<h4 className='text'> {this.state.user.rank} out of {this.state.length}! </h4>\n  \t\t</div> : <p className=\"text\">Note: If nothing shows up the name hasn't been added yet</p>}\n  \t\t\t</div>\n  \t)\n  }*/\n\n\n  render() {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }\n    }, __jsx(\"h4\", {\n      className: \"text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 6\n      }\n    }, \"Enter a name below to see all the times!\"), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 6\n      }\n    }, __jsx(\"input\", {\n      type: \"text\",\n      value: this.state.search,\n      onChange: this.handleUpdate.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }\n    })), __jsx(\"button\", {\n      className: \"button-style\",\n      onClick: this.handleSearch.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 6\n      }\n    }, \"Search\"), this.state.user ? __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 25\n      }\n    }, __jsx(\"div\", {\n      className: \"text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 7\n      }\n    }, this.state.mySolves)) : __jsx(\"p\", {\n      className: \"text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 16\n      }\n    }, \"Note: If nothing shows up the name hasn't been added yet\"));\n  }\n\n}\n\nexport default Search;","map":{"version":3,"sources":["/Users/Austin/NewWebsite/website/pages/search.js"],"names":["React","getInfo","Search","Component","constructor","props","state","search","length","mySolves","handleUpdate","evt","setState","target","value","handleSearch","user","console","log","solves","list","i","name","time","cube","split","map","str","children","previousState","componentDidMount","url","response","fetch","data","json","size","rows","err","render","bind"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { getInfo } from \"../lib/utilSearch\";\n\nclass Search extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {search: \"\"};\n\t\tthis.state = {length: 0};\n\t\tthis.state = {mySolves: []};\n\t}\n\n\t   handleUpdate(evt) {\n    \tthis.setState({search: evt.target.value});\n  \t}\n\n  \tasync handleSearch(evt) {\n  \t\t// console.log(this.state.search);\n  \t\tconst user = await getInfo(this.state.search);\n  \t\tconsole.log(user.solves);\n  \t\t// this.setState({ user: user.solves });\n  \t\tthis.setState({user});\n  \t\tvar list=\"\";\n  \t\tfor (var i=0; i<user.solves.length; i++) {\n  \t\t\tlist = user.solves[i].name + \" \" + user.solves[i].time + \" \" + user.solves[i].cube + \"\\n\";\n  \t\t\tlist = list.split('\\n').map(str => <p> {str} </p>);\n  \t\t\t\tconsole.log(list[0].props.children);\n  \t\t\t\tthis.setState(previousState => ({\n  \t\t\t\t\tmySolves: [...previousState.mySolves, list[0].props.children]\n  \t\t\t\t}))\n  \t\t}\n  \t\tconsole.log(this.state.mySolves);\n  \t}\n\n  \tasync componentDidMount() {\n  \t\tconst url = \"http://localhost:3001/api/length\";\n  \t\tconst response = await fetch(url);\n  \t\tconst data = await response.json();\n  \t\t// console.log(data.rows);\n\n  \t\t// this isn't defining anything\n  \t\ttry {\n  \t\t\tthis.setState({\n  \t\t\t\tlength: data.size[0].rows\n  \t\t\t})\n  \t\t} catch (err) {\n\n  \t\t}\n  \t}\n\n  \t/* render() {\n  \t\treturn (\n  \t\t\t<div>\n  \t\t\t<h4 className=\"text\">Enter a name below to see all the times!</h4>\n  \t\t\t<p><input type='text' value={this.state.search} onChange={this.handleUpdate.bind(this)} /></p>\n  \t\t\t<button className=\"button-style\" onClick={this.handleSearch.bind(this)}>Search</button>\n\n  \t\t\t{this.state.user ? <div>\n  \t\t\t\t<h4 className='text'> {this.state.user.name}, {this.state.user.time} </h4>\n  \t\t\t\t<h4 className='text'> {this.state.user.rank} out of {this.state.length}! </h4>\n  \t\t\t</div> : <p className=\"text\">Note: If nothing shows up the name hasn't been added yet</p>}\n\n  \t\t\t</div>\n  \t\t)\n  \t}*/ \n\n  \trender() {\n  \t\treturn (\n  \t\t\t <div>\n  \t\t\t<h4 className=\"text\">Enter a name below to see all the times!</h4>\n  \t\t\t<p><input type='text' value={this.state.search} onChange={this.handleUpdate.bind(this)} /></p>\n  \t\t\t<button className=\"button-style\" onClick={this.handleSearch.bind(this)}>Search</button>\n\n\n  \t\t\t{this.state.user ? <div>\n  \t\t\t\t<div className=\"text\">{this.state.mySolves}</div>\n  \t\t\t\t</div> : <p className=\"text\">Note: If nothing shows up the name hasn't been added yet</p>}\n\n\n  \t\t\t</div>\n  \t\t)\n  \t}\n}\n\nexport default Search; "]},"metadata":{},"sourceType":"module"}